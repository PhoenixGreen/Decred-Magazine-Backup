{"version":3,"file":"parser-plugins.js","sources":["../lib/cards/button.js","../lib/helpers.js","../lib/cards/embed.js","../lib/cards/html.js","../lib/cards/softReturn.js","../lib/cards/product.js","../lib/cards/audio.js","../lib/cards/video.js","../lib/cards/before-after.js","../lib/cards/file.js","../lib/cards/header.js","../lib/parser-plugins.js"],"sourcesContent":["function getButtonText(node) {\n    let buttonText = node.textContent;\n    if (buttonText) {\n        buttonText = buttonText.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n    }\n    return buttonText;\n}\n\nexport function fromKoenigCard() {\n    return function kgButtonCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-button-card')) {\n            return;\n        }\n\n        const alignment = node.classList.contains('kg-align-center') ? 'center' : 'left';\n\n        const anchor = node.querySelector('a');\n\n        const buttonUrl = anchor.href;\n        const buttonText = getButtonText(anchor);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        const payload = {\n            alignment,\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromWordpressButton() {\n    return function wordpressButtonToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('wp-block-button__link')) {\n            return;\n        }\n\n        const buttonUrl = node.href;\n        const buttonText = getButtonText(node);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        let alignment = 'left';\n\n        if (node.closest('.is-content-justification-center, .is-content-justification-right')) {\n            alignment = 'center';\n        }\n\n        const payload = {\n            alignment,\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromSubstackButton() {\n    return function substackButtonToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('button')) {\n            return;\n        }\n\n        // substack has .button-wrapper elems with a data-attrs JSON object with `url` and `text`\n        // we're not using that in favour of grabbing the anchor element directly for simplicity\n\n        const anchor = node.tagName === 'A' ? node : node.querySelector('a');\n\n        if (!anchor) {\n            return;\n        }\n\n        const buttonUrl = anchor.href;\n        const buttonText = getButtonText(anchor);\n\n        if (!buttonUrl || !buttonText) {\n            return;\n        }\n\n        const payload = {\n            alignment: 'center', // all Substack buttons are centered\n            buttonUrl,\n            buttonText\n        };\n\n        const cardSection = builder.createCardSection('button', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function addFigCaptionToPayload(node, payload, {selector = 'figcaption', options}) {\n    let figcaptions = Array.from(node.querySelectorAll(selector));\n\n    if (figcaptions.length) {\n        figcaptions.forEach((caption) => {\n            let cleanHtml = options.cleanBasicHtml(caption.innerHTML);\n            payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n            caption.remove(); // cleanup this processed element\n        });\n    }\n}\n","import {addFigCaptionToPayload} from '../helpers';\n\n// Helpers\n\nfunction _createPayloadForIframe(iframe) {\n    // If we don't have a src Or it's not an absolute URL, we can't handle this\n    // This regex handles http://, https:// or //\n    if (!iframe.src || !iframe.src.match(/^(https?:)?\\/\\//i)) {\n        return;\n    }\n\n    // if it's a schemaless URL, convert to https\n    if (iframe.src.match(/^\\/\\//)) {\n        iframe.src = `https:${iframe.src}`;\n    }\n\n    let payload = {\n        url: iframe.src\n    };\n\n    payload.html = iframe.outerHTML;\n\n    return payload;\n}\n\n// Plugins\n\nexport function fromMixtape(options) {\n    return function mixtapeEmbed(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'DIV' || !node.className.match(/graf--mixtapeEmbed/)) {\n            return;\n        }\n\n        // Grab the relevant elements - Anchor wraps most of the data\n        let anchorElement = node.querySelector('.markup--mixtapeEmbed-anchor');\n        let titleElement = anchorElement.querySelector('.markup--mixtapeEmbed-strong');\n        let descElement = anchorElement.querySelector('.markup--mixtapeEmbed-em');\n        // Image is a top level field inside it's own a tag\n        let imgElement = node.querySelector('.mixtapeImage');\n\n        // Grab individual values from the elements\n        let url = anchorElement.href;\n        let title = '';\n        let description = '';\n\n        if (titleElement && titleElement.innerHTML) {\n            title = options.cleanBasicHtml(titleElement.innerHTML);\n            // Cleanup anchor so we can see what's left now that we've processed title\n            anchorElement.removeChild(titleElement);\n        }\n\n        if (descElement && descElement.innerHTML) {\n            description = options.cleanBasicHtml(descElement.innerHTML);\n            // Cleanup anchor so we can see what's left now that we've processed description\n            anchorElement.removeChild(descElement);\n        }\n\n        // // Format our preferred structure.\n        let metadata = {\n            url,\n            title,\n            description\n        };\n\n        // Publisher is the remaining text in the anchor, once title & desc are removed\n        let publisher = options.cleanBasicHtml(anchorElement.innerHTML);\n        if (publisher) {\n            metadata.publisher = publisher;\n        }\n\n        // Image is optional,\n        // The element usually still exists with an additional has.mixtapeImage--empty class and has no background image\n        if (imgElement && imgElement.style['background-image']) {\n            metadata.thumbnail = imgElement.style['background-image'].match(/url\\(([^)]*?)\\)/)[1];\n        }\n\n        let payload = {url, metadata};\n        let cardSection = builder.createCardSection('bookmark', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigureIframe(options) {\n    return function figureIframeToEmbed(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let iframe = node.querySelector('iframe');\n\n        if (!iframe) {\n            return;\n        }\n\n        let payload = _createPayloadForIframe(iframe);\n\n        if (!payload) {\n            return;\n        }\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromIframe() {\n    return function iframeToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'IFRAME') {\n            return;\n        }\n\n        let payload = _createPayloadForIframe(node);\n\n        if (!payload) {\n            return;\n        }\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromFigureBlockquote(options) {\n    return function figureBlockquoteToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let blockquote = node.querySelector('blockquote');\n        let link = node.querySelector('a');\n\n        if (!blockquote || !link) {\n            return;\n        }\n\n        let url = link.href;\n\n        // If we don't have a url, or it's not an absolute URL, we can't handle this\n        if (!url || !url.match(/^https?:\\/\\//i)) {\n            return;\n        }\n\n        let payload = {\n            url: url\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        payload.html = node.innerHTML;\n\n        let cardSection = builder.createCardSection('embed', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromNFTEmbed() {\n    return function fromNFTEmbedToEmbedCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || (node.tagName !== 'FIGURE' && node.tagName !== 'NFT-CARD' && node.tagName !== 'DIV')) {\n            return;\n        }\n\n        // Attempt to parse Ghost NFT Card\n        if (node.tagName === 'FIGURE') {\n            if (!node.classList.contains('kg-nft-card')) {\n                return;\n            }\n            let nftCard = node.querySelector('a');\n\n            if (!nftCard) {\n                return;\n            }\n\n            let payload;\n            try {\n                payload = JSON.parse(decodeURIComponent(nftCard.dataset.payload));\n            } catch (err) {\n                return nodeFinished();\n            }\n\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n\n        // Attempt to parse Substack NFT Card\n        if (node.tagName === 'DIV') {\n            if (!node.classList.contains('opensea')) {\n                return;\n            }\n\n            let url = node.querySelector('a');\n            let [match, contractAddress, tokenId] = url.href.match(/\\/assets\\/(0x[0-9a-f]+)\\/(\\d+)/);\n\n            if (!match) {\n                return;\n            }\n\n            let payload = {\n                url: url.href,\n                html: `<nft-card contractAddress=\"${contractAddress}\" tokenId=\"${tokenId}\"></nft-card><script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script>`\n            };\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n\n        if (node.tagName === 'NFT-CARD') {\n            let attr = node.attributes;\n            let contractAddress = (attr.contractAddress || attr.contractaddress || attr.tokenaddress || attr.contractaddress).value;\n            let tokenId = (attr.tokenId || attr.tokenid).value;\n            if (!contractAddress || !tokenId) {\n                return;\n            }\n            let payload = {\n                url: `https://opensea.io/assets/${contractAddress}/${tokenId}/`,\n                html: `<nft-card contractAddress=\"${contractAddress}\" tokenId=\"${tokenId}\"></nft-card><script src=\"https://unpkg.com/embeddable-nfts/dist/nft-card.min.js\"></script>`\n            };\n            let cardSection = builder.createCardSection('embed', payload);\n            addSection(cardSection);\n            return nodeFinished();\n        }\n    };\n}\n","// https://github.com/TryGhost/Koenig/issues/1\n// allows arbitrary HTML blocks wrapped in our card comments to be extracted\n// into a HTML card rather than being put through the normal parse+plugins\nexport function fromKoenigCard() {\n    return function kgHtmlCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 8 || node.nodeValue !== 'kg-card-begin: html') {\n            return;\n        }\n\n        let html = [];\n\n        function isHtmlEndComment(n) {\n            return n && n.nodeType === 8 && n.nodeValue === 'kg-card-end: html';\n        }\n\n        let nextNode = node.nextSibling;\n        while (nextNode && !isHtmlEndComment(nextNode)) {\n            let currentNode = nextNode;\n            html.push(currentNode.outerHTML);\n            nextNode = currentNode.nextSibling;\n            // remove nodes as we go so that they don't go through the parser\n            currentNode.remove();\n        }\n\n        let payload = {html: html.join('\\n').trim()};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function fromBr() {\n    // mobiledoc by default ignores <BR> tags but we have a custom SoftReturn atom\n    return function fromBrToSoftReturnAtom(node, builder, {addMarkerable, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'BR') {\n            return;\n        }\n\n        let softReturn = builder.createAtom('soft-return');\n        addMarkerable(softReturn);\n\n        nodeFinished();\n    };\n}\n","function getButtonText(node) {\n    let buttonText = node.textContent;\n    if (buttonText) {\n        buttonText = buttonText.replace(/\\n/g, ' ').replace(/\\s+/g, ' ').trim();\n    }\n    return buttonText;\n}\n\nexport function fromKoenigCard() {\n    return function kgButtonCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-product-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-product-card-title');\n        const descriptionNode = node.querySelector('.kg-product-card-description');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const description = descriptionNode && descriptionNode.innerHTML.trim();\n\n        if (!title && !description) {\n            return;\n        }\n\n        const payload = {\n            productButtonEnabled: false,\n            productRatingEnabled: false,\n\n            productTitle: title,\n            productDescription: description\n        };\n\n        const img = node.querySelector('.kg-product-card-image');\n        if (img && img.getAttribute('src')) {\n            payload.productImageSrc = img.getAttribute('src');\n        }\n\n        const stars = [...node.querySelectorAll('.kg-product-card-rating-active')].length;\n        if (stars) {\n            payload.productRatingEnabled = true;\n            payload.productStarRating = stars;\n        }\n\n        const button = node.querySelector('a');\n\n        if (button) {\n            const buttonUrl = button.href;\n            const buttonText = getButtonText(button);\n\n            if (buttonUrl && buttonText) {\n                payload.productButtonEnabled = true;\n                payload.productButton = buttonText;\n                payload.productUrl = buttonUrl;\n            }\n        }\n\n        const cardSection = builder.createCardSection('product', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function fromKoenigCard() {\n    return function kgAudioCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-audio-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-audio-title');\n        const audioNode = node.querySelector('.kg-audio-player-container audio');\n        const thumbnailNode = node.querySelector('.kg-audio-thumbnail');\n        const durationNode = node.querySelector('.kg-audio-duration');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const audioSrc = audioNode && audioNode.src;\n        const thumbnailSrc = thumbnailNode && thumbnailNode.src;\n        const durationText = durationNode && durationNode.innerHTML.trim();\n\n        if (!audioSrc) {\n            return;\n        }\n\n        const payload = {\n            src: audioSrc,\n            title: title\n        };\n        if (thumbnailSrc) {\n            payload.thumbnailSrc = thumbnailSrc;\n        }\n\n        if (durationText) {\n            const {minutes, seconds} = durationText.split(':');\n            try {\n                payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n            } catch (e) {\n                // ignore duration\n            }\n        }\n\n        const cardSection = builder.createCardSection('audio', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function fromKoenigCard() {\n    return function kgVideoCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-video-card')) {\n            return;\n        }\n\n        const videoNode = node.querySelector('.kg-video-player-container video');\n        const durationNode = node.querySelector('.kg-video-duration');\n        const videoSrc = videoNode && videoNode.src;\n        const durationText = durationNode && durationNode.innerHTML.trim();\n\n        if (!videoSrc) {\n            return;\n        }\n\n        const payload = {\n            src: videoSrc,\n            loop: !!videoNode.loop\n        };\n\n        if (durationText) {\n            const {minutes, seconds} = durationText.split(':');\n            try {\n                payload.duration = parseInt(minutes) * 60 + parseInt(seconds);\n            } catch (e) {\n                // ignore duration\n            }\n        }\n\n        const cardSection = builder.createCardSection('video', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","import {addFigCaptionToPayload} from '../helpers';\n\nexport function fromKoenigCard(options) {\n    return function kgBeforeAfterCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-before-after-card')) {\n            return;\n        }\n\n        const cardWidth = node.classList.contains('kg-width-full') ? 'full' : 'wide';\n\n        const images = node.querySelectorAll('img');\n\n        const beforeImage = images[1];\n        const afterImage = images[0];\n\n        if (!beforeImage || !afterImage) {\n            return;\n        }\n\n        const payload = {\n            cardWidth,\n            beforeImage: {\n                width: beforeImage.width,\n                src: beforeImage.src\n            },\n            afterImage: {\n                width: afterImage.width,\n                src: afterImage.src\n            }\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        const cardSection = builder.createCardSection('before-after', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n\nexport function fromJetpackCard(options) {\n    return function jetpackJuxtaposeToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('wp-block-jetpack-image-compare')) {\n            return;\n        }\n\n        const cardWidth = 'wide';\n\n        const images = node.querySelectorAll('img');\n\n        const beforeImage = images[0];\n        const afterImage = images[1];\n\n        if (!beforeImage || !afterImage) {\n            return;\n        }\n\n        const payload = {\n            cardWidth,\n            beforeImage: {\n                width: 1000,\n                src: beforeImage.src\n            },\n            afterImage: {\n                width: 1000,\n                src: afterImage.src\n            }\n        };\n\n        addFigCaptionToPayload(node, payload, {options});\n\n        const cardSection = builder.createCardSection('before-after', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","function transformSizeToBytes(sizeStr = '') {\n    if (!sizeStr) {\n        return 0;\n    }\n    const [sizeVal, sizeType] = sizeStr.split(' ');\n    if (!sizeVal || !sizeType) {\n        return 0;\n    }\n    if (sizeType === 'Bytes') {\n        return Number(sizeVal);\n    } else if (sizeType === 'KB') {\n        return Number(sizeVal) * 2048;\n    } else if (sizeType === 'MB') {\n        return Number(sizeVal) * 2048 * 2048;\n    }\n}\n\nexport function fromKoenigCard() {\n    return function kgFileCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-file-card')) {\n            return;\n        }\n\n        const titleNode = node.querySelector('.kg-file-card-title');\n        const captionNode = node.querySelector('.kg-file-card-caption');\n        const fileNameNode = node.querySelector('.kg-file-card-filename');\n        const fileSizeNode = node.querySelector('.kg-file-card-filesize');\n        const fileCardLinkNode = node.querySelector('.kg-file-card-container');\n        const title = titleNode && titleNode.innerHTML.trim();\n        const caption = captionNode && captionNode.innerHTML.trim();\n        const fileName = fileNameNode && fileNameNode.innerHTML.trim();\n        const fileSizeStr = fileSizeNode && fileSizeNode.innerHTML.trim();\n        const fileSrc = fileCardLinkNode && fileCardLinkNode.href;\n\n        if (!fileSrc) {\n            return;\n        }\n\n        const payload = {\n            src: fileSrc,\n            fileTitle: title,\n            fileCaption: caption,\n            fileSize: transformSizeToBytes(fileSizeStr),\n            fileName: fileName\n        };\n\n        const cardSection = builder.createCardSection('file', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","export function fromKoenigCard() {\n    return function kgHeaderCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-header-card')) {\n            return;\n        }\n\n        const headerNode = node.querySelector('.kg-header-card-header');\n        const subheaderNode = node.querySelector('.kg-header-card-subheader');\n        const buttonNode = node.querySelector('.kg-header-card-button');\n\n        let header = '';\n        let subheader = '';\n        let buttonText = '';\n        let buttonUrl = '';\n\n        if (headerNode) {\n            header = headerNode.innerHTML.trim();\n        }\n        if (subheaderNode) {\n            subheader = subheaderNode.innerHTML.trim();\n        }\n\n        if (buttonNode) {\n            buttonText = buttonNode.textContent.trim();\n            buttonUrl = buttonNode.getAttribute('href').trim();\n        }\n\n        if (!header && !subheader && (!buttonNode || !buttonText || !buttonUrl)) {\n            return;\n        }\n\n        const classes = [...node.classList];\n        let backgroundImageSrc = '';\n        if (node.getAttribute('data-kg-background-image')) {\n            backgroundImageSrc = node.getAttribute('data-kg-background-image').trim();\n        }\n\n        const payload = {\n            header,\n            subheader,\n            buttonEnabled: Boolean(buttonNode),\n            buttonText,\n            buttonUrl,\n            backgroundImageSrc,\n            size: 'small',\n            style: 'dark'\n        };\n\n        const sizeClass = classes.find(c => /^kg-size-(small|medium|large)$/.test(c));\n        const styleClass = classes.find(c => /^kg-style-(dark|light|accent|image)$/.test(c));\n        if (sizeClass) {\n            payload.size = sizeClass.replace('kg-size-', '');\n        }\n        if (styleClass) {\n            payload.style = styleClass.replace('kg-style-', '');\n        }\n\n        const cardSection = builder.createCardSection('header', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n}\n","/* global DOMParser, window */\n\n/**\n * Copied from:\n * https://github.com/TryGhost/Ghost-Admin/blob/1f3d77d7230dd47a7eb5f38b90dfa510b2a16801/lib/koenig-editor/addon/options/parser-plugins.js\n * Which makes use of:\n * https://github.com/TryGhost/Ghost-Admin/blob/1f3d77d7230dd47a7eb5f38b90dfa510b2a16801/lib/koenig-editor/addon/helpers/clean-basic-html.js\n *\n * These functions are used to proces nodes during parsing from DOM -> mobiledoc\n */\n\nimport cleanBasicHtml from '@tryghost/kg-clean-basic-html';\n\nimport * as buttonCard from './cards/button';\nimport * as embedCard from './cards/embed';\nimport * as htmlCard from './cards/html';\nimport * as softReturn from './cards/softReturn';\nimport * as productCard from './cards/product';\nimport * as audioCard from './cards/audio';\nimport * as videoCard from './cards/video';\nimport * as beforeAfterCard from './cards/before-after';\nimport * as fileCard from './cards/file';\nimport * as headerCard from './cards/header';\n\nexport function createParserPlugins(_options = {}) {\n    const defaults = {};\n    const options = Object.assign({}, defaults, _options);\n\n    if (!options.createDocument) {\n        const Parser = (typeof DOMParser !== 'undefined' && DOMParser) || (typeof window !== 'undefined' && window.DOMParser);\n\n        if (!Parser) {\n            throw new Error('createParserPlugins() must be passed a `createDocument` function as an option when used in a non-browser environment');\n        }\n\n        options.createDocument = function (html) {\n            const parser = new Parser();\n            return parser.parseFromString(html, 'text/html');\n        };\n    }\n\n    options.cleanBasicHtml = function (html) {\n        return cleanBasicHtml(html, options);\n    };\n\n    // HELPERS -----------------------------------------------------------------\n\n    function _readFigCaptionFromNode(node, payload, selector = 'figcaption') {\n        let figcaptions = Array.from(node.querySelectorAll(selector));\n\n        if (figcaptions.length) {\n            figcaptions.forEach((caption) => {\n                let cleanHtml = options.cleanBasicHtml(caption.innerHTML);\n                payload.caption = payload.caption ? `${payload.caption} / ${cleanHtml}` : cleanHtml;\n                caption.remove(); // cleanup this processed element\n            });\n        }\n    }\n\n    function _readGalleryImageFromNode(node, imgNum) {\n        let fileName = node.src.match(/[^/]*$/)[0];\n        let image = {\n            fileName,\n            row: Math.floor(imgNum / 3),\n            src: node.src\n        };\n\n        if (node.width) {\n            image.width = node.width;\n        } else if (node.dataset && node.dataset.width) {\n            image.width = parseInt(node.dataset.width, 10);\n        }\n\n        if (node.height) {\n            image.height = node.height;\n        } else if (node.dataset && node.dataset.height) {\n            image.height = parseInt(node.dataset.height, 10);\n        }\n\n        if ((!node.width && !node.height) && node.getAttribute('data-image-dimensions')) {\n            const [, width, height] = (/^(\\d*)x(\\d*)$/gi).exec(node.getAttribute('data-image-dimensions'));\n            image.width = parseInt(width, 10);\n            image.height = parseInt(height, 10);\n        }\n\n        if (node.alt) {\n            image.alt = node.alt;\n        }\n\n        if (node.title) {\n            image.title = node.title;\n        }\n\n        return image;\n    }\n\n    // PLUGINS -----------------------------------------------------------------\n\n    function kgCalloutCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-callout-card')) {\n            return;\n        }\n\n        const emojiNode = node.querySelector('.kg-callout-emoji');\n        const htmlNode = node.querySelector('.kg-callout-text');\n\n        const backgroundColor = node.style.backgroundColor || '#F1F3F4';\n\n        let calloutEmoji = '';\n        if (emojiNode) {\n            calloutEmoji = emojiNode.textContent;\n            if (calloutEmoji) {\n                calloutEmoji = calloutEmoji.trim();\n            }\n        }\n\n        let calloutText = htmlNode.innerHTML;\n\n        const payload = {\n            calloutEmoji,\n            calloutText,\n            backgroundColor\n        };\n\n        const cardSection = builder.createCardSection('callout', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function kgToggleCardToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || !node.classList.contains('kg-toggle-card')) {\n            return;\n        }\n\n        const headingNode = node.querySelector('.kg-toggle-heading-text');\n        const contentNode = node.querySelector('.kg-toggle-content');\n\n        let toggleHeading = headingNode.innerHTML;\n        let toggleContent = contentNode.innerText;\n\n        const payload = {\n            heading: toggleHeading,\n            content: toggleContent\n        };\n\n        const cardSection = builder.createCardSection('toggle', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    // leading newlines in text nodes will add a space to the beginning of the text\n    // which doesn't render correctly if we're replacing <br> with SoftReturn atoms\n    // after parsing text as markdown to html\n    function removeLeadingNewline(node) {\n        if (node.nodeType !== 3 || node.nodeName !== '#text') {\n            return;\n        }\n\n        node.nodeValue = node.nodeValue.replace(/^\\n/, '');\n    }\n\n    const kgGalleryCardToCard = (node, builder, {addSection, nodeFinished}) => {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        if (!node.className.match(/kg-gallery-card/)) {\n            return;\n        }\n\n        let payload = {};\n        let imgs = Array.from(node.querySelectorAll('img'));\n\n        // Process nodes into the payload\n        payload.images = imgs.map(_readGalleryImageFromNode);\n\n        _readFigCaptionFromNode(node, payload);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    };\n\n    function grafGalleryToCard(node, builder, {addSection, nodeFinished}) {\n        function isGrafGallery(n) {\n            return n.nodeType === 1 && n.tagName === 'DIV' && n.dataset && n.dataset.paragraphCount && n.querySelectorAll('img').length > 0;\n        }\n\n        if (!isGrafGallery(node)) {\n            return;\n        }\n\n        let payload = {};\n\n        // These galleries exist in multiple divs. Read the images and caption from the first one...\n        let imgs = Array.from(node.querySelectorAll('img'));\n        _readFigCaptionFromNode(node, payload);\n\n        // ...and then iterate over any remaining divs until we run out of matches\n        let nextNode = node.nextSibling;\n        while (nextNode && isGrafGallery(nextNode)) {\n            let currentNode = nextNode;\n            imgs = imgs.concat(Array.from(currentNode.querySelectorAll('img')));\n            _readFigCaptionFromNode(currentNode, payload);\n            nextNode = currentNode.nextSibling;\n            // remove nodes as we go so that they don't go through the parser\n            currentNode.remove();\n        }\n\n        // Process nodes into the payload\n        payload.images = imgs.map(_readGalleryImageFromNode);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function sqsGalleriesToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'DIV' || !node.className.match(/sqs-gallery-container/) || node.className.match(/summary-/)) {\n            return;\n        }\n\n        let payload = {};\n\n        // Each image exists twice...\n        // The first image is wrapped in `<noscript>`\n        // The second image contains image dimensions but the src property needs to be taken from `data-src`.\n        let imgs = Array.from(node.querySelectorAll('img.thumb-image'));\n\n        imgs = imgs.map((img) => {\n            if (!img.getAttribute('src')) {\n                if (img.previousSibling.tagName === 'NOSCRIPT' && img.previousSibling.getElementsByTagName('img').length) {\n                    const prevNode = img.previousSibling;\n                    img.setAttribute('src', img.getAttribute('data-src'));\n                    prevNode.remove();\n                } else {\n                    return;\n                }\n            }\n\n            return img;\n        });\n\n        _readFigCaptionFromNode(node, payload, '.meta-title');\n\n        // Process nodes into the payload\n        payload.images = imgs.map(_readGalleryImageFromNode);\n\n        let cardSection = builder.createCardSection('gallery', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function figureToImageCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let img = node.querySelector('img');\n        let kgClass = node.className.match(/kg-width-(wide|full)/);\n        let grafClass = node.className.match(/graf--layout(FillWidth|OutsetCenter)/);\n\n        if (!img) {\n            return;\n        }\n\n        let payload = {\n            src: img.src,\n            alt: img.alt,\n            title: img.title\n        };\n\n        if (kgClass) {\n            payload.cardWidth = kgClass[1];\n        } else if (grafClass) {\n            payload.cardWidth = grafClass[1] === 'FillWidth' ? 'full' : 'wide';\n        }\n\n        _readFigCaptionFromNode(node, payload);\n\n        let cardSection = builder.createCardSection('image', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function imgToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'IMG') {\n            return;\n        }\n\n        let payload = {\n            src: node.src,\n            alt: node.alt,\n            title: node.title\n        };\n\n        let cardSection = builder.createCardSection('image', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function hrToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'HR') {\n            return;\n        }\n\n        let cardSection = builder.createCardSection('hr');\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function figureToCodeCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let pre = node.querySelector('pre');\n\n        // If this figure doesn't have a pre tag in it\n        if (!pre) {\n            return;\n        }\n\n        let code = pre.querySelector('code');\n        let figcaption = node.querySelector('figcaption');\n\n        // if there's no caption the preCodeToCard plugin will pick it up instead\n        if (!code || !figcaption) {\n            return;\n        }\n\n        let payload = {\n            code: code.textContent\n        };\n\n        _readFigCaptionFromNode(node, payload);\n\n        let preClass = pre.getAttribute('class') || '';\n        let codeClass = code.getAttribute('class') || '';\n        let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n        let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n        if (languageMatches) {\n            payload.language = languageMatches[1].toLowerCase();\n        }\n\n        let cardSection = builder.createCardSection('code', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    function preCodeToCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'PRE') {\n            return;\n        }\n\n        let [codeElement] = node.children;\n\n        if (codeElement && codeElement.tagName === 'CODE') {\n            let payload = {code: codeElement.textContent};\n\n            let preClass = node.getAttribute('class') || '';\n            let codeClass = codeElement.getAttribute('class') || '';\n            let langRegex = /lang(?:uage)?-(.*?)(?:\\s|$)/i;\n            let languageMatches = preClass.match(langRegex) || codeClass.match(langRegex);\n            if (languageMatches) {\n                payload.language = languageMatches[1].toLowerCase();\n            }\n\n            let cardSection = builder.createCardSection('code', payload);\n            addSection(cardSection);\n            nodeFinished();\n        }\n    }\n\n    function figureScriptToHtmlCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'FIGURE') {\n            return;\n        }\n\n        let script = node.querySelector('script');\n\n        if (!script || !script.src.match(/^https:\\/\\/gist\\.github\\.com/)) {\n            return;\n        }\n\n        let payload = {html: script.outerHTML};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    // Nested paragraphs in blockquote are currently treated as separate blockquotes,\n    // see [here](https://github.com/bustle/mobiledoc-kit/issues/715). When running migrations,\n    // this is not the desired behaviour and will cause the content to lose the previous semantic.\n    function blockquoteWithChildren(node) {\n        if (node.nodeType !== 1 || node.tagName !== 'BLOCKQUOTE' || node.children.length < 1) {\n            return;\n        }\n\n        const html = [];\n        const children = Array.from(node.children);\n\n        children.forEach((child) => {\n            let nextSibling = child.nextSibling;\n            let previousSibling = child.previousSibling;\n\n            // Only add a soft-break for two sequential paragraphs.\n            // Use the innerHTML only in that case, so Mobiledoc's default behaviour\n            // of creating separate blockquotes doesn't apply.\n            if (child.tagName === 'P' && (nextSibling && nextSibling.tagName === 'P')) {\n                html.push(`${child.innerHTML}<br><br>`);\n            } else if (child.tagName === 'P' && (previousSibling && previousSibling.tagName === 'P')) {\n                html.push(child.innerHTML);\n            } else {\n                html.push(child.outerHTML);\n            }\n        });\n\n        node.innerHTML = html.join('').trim();\n\n        return;\n    }\n\n    // we store alt-style blockquotes as `aside` sections as a workaround\n    // for mobiledoc not allowing arbitrary attributes on markup sections\n    function altBlockquoteToAside(node) {\n        if (node.nodeType !== 1 || node.tagName !== 'BLOCKQUOTE') {\n            return;\n        }\n\n        if (!node.classList.contains('kg-blockquote-alt')) {\n            return;\n        }\n\n        const replacementDoc = options.createDocument(`<aside>${node.innerHTML}</aside>`);\n        const aside = replacementDoc.querySelector('aside');\n\n        // bit of an ugly hack because\n        // 1. node.tagName is readonly so we can't directly change it's type\n        // 2. the node list of the current tree branch is not re-evaluated so removing\n        //    this node, replacing it, or adding a new _sibling_ will not be picked up\n        //\n        // relies on mobiledoc-kit's handling of nested elements picking the\n        // inner-most understandable section element when creating sections\n        node.textContent = '';\n        node.appendChild(aside);\n\n        // let the default parser handle the nested aside node, keeping any formatting\n        return;\n    }\n\n    function tableToHtmlCard(node, builder, {addSection, nodeFinished}) {\n        if (node.nodeType !== 1 || node.tagName !== 'TABLE') {\n            return;\n        }\n\n        if (node.parentNode.tagName === 'TABLE') {\n            return;\n        }\n\n        let payload = {html: node.outerHTML};\n        let cardSection = builder.createCardSection('html', payload);\n        addSection(cardSection);\n        nodeFinished();\n    }\n\n    return [\n        beforeAfterCard.fromKoenigCard(options),\n        beforeAfterCard.fromJetpackCard(options),\n        embedCard.fromNFTEmbed(),\n        embedCard.fromMixtape(options),\n        htmlCard.fromKoenigCard(options),\n        buttonCard.fromKoenigCard(options),\n        buttonCard.fromWordpressButton(options),\n        buttonCard.fromSubstackButton(options),\n        kgCalloutCardToCard,\n        kgToggleCardToCard,\n        productCard.fromKoenigCard(options),\n        audioCard.fromKoenigCard(options),\n        videoCard.fromKoenigCard(options),\n        fileCard.fromKoenigCard(options),\n        headerCard.fromKoenigCard(options),\n        blockquoteWithChildren,\n        softReturn.fromBr(options),\n        removeLeadingNewline,\n        kgGalleryCardToCard,\n        embedCard.fromFigureBlockquote(options), // I think these can contain images\n        grafGalleryToCard,\n        sqsGalleriesToCard,\n        figureToImageCard,\n        imgToCard,\n        hrToCard,\n        figureToCodeCard,\n        preCodeToCard,\n        embedCard.fromFigureIframe(options),\n        embedCard.fromIframe(options), // Process iFrames without figures after ones with\n        figureScriptToHtmlCard,\n        altBlockquoteToAside,\n        tableToHtmlCard\n    ];\n}\n"],"names":["getButtonText","node","buttonText","textContent","replace","trim","fromKoenigCard","kgButtonCardToCard","builder","addSection","nodeFinished","nodeType","classList","contains","alignment","anchor","querySelector","buttonUrl","href","payload","cardSection","createCardSection","fromWordpressButton","wordpressButtonToCard","closest","fromSubstackButton","substackButtonToCard","tagName","addFigCaptionToPayload","selector","options","figcaptions","Array","from","querySelectorAll","length","forEach","caption","cleanHtml","cleanBasicHtml","innerHTML","remove","_createPayloadForIframe","iframe","src","match","url","html","outerHTML","fromMixtape","mixtapeEmbed","className","anchorElement","titleElement","descElement","imgElement","title","description","removeChild","metadata","publisher","style","thumbnail","fromFigureIframe","figureIframeToEmbed","fromIframe","iframeToEmbedCard","fromFigureBlockquote","figureBlockquoteToEmbedCard","blockquote","link","fromNFTEmbed","fromNFTEmbedToEmbedCard","nftCard","JSON","parse","decodeURIComponent","dataset","err","contractAddress","tokenId","attr","attributes","contractaddress","tokenaddress","value","tokenid","kgHtmlCardToCard","nodeValue","isHtmlEndComment","n","nextNode","nextSibling","currentNode","push","join","fromBr","fromBrToSoftReturnAtom","addMarkerable","softReturn","createAtom","titleNode","descriptionNode","productButtonEnabled","productRatingEnabled","productTitle","productDescription","img","getAttribute","productImageSrc","stars","productStarRating","button","productButton","productUrl","kgAudioCardToCard","audioNode","thumbnailNode","durationNode","audioSrc","thumbnailSrc","durationText","minutes","seconds","split","duration","parseInt","e","kgVideoCardToCard","videoNode","videoSrc","loop","kgBeforeAfterCardToCard","cardWidth","images","beforeImage","afterImage","width","fromJetpackCard","jetpackJuxtaposeToCard","transformSizeToBytes","sizeStr","sizeVal","sizeType","Number","kgFileCardToCard","captionNode","fileNameNode","fileSizeNode","fileCardLinkNode","fileName","fileSizeStr","fileSrc","fileTitle","fileCaption","fileSize","kgHeaderCardToCard","headerNode","subheaderNode","buttonNode","header","subheader","classes","backgroundImageSrc","buttonEnabled","Boolean","size","sizeClass","find","c","test","styleClass","createParserPlugins","_options","defaults","Object","assign","createDocument","Parser","DOMParser","window","Error","parser","parseFromString","_readFigCaptionFromNode","_readGalleryImageFromNode","imgNum","image","row","Math","floor","height","exec","alt","kgCalloutCardToCard","emojiNode","htmlNode","backgroundColor","calloutEmoji","calloutText","kgToggleCardToCard","headingNode","contentNode","toggleHeading","toggleContent","innerText","heading","content","removeLeadingNewline","nodeName","kgGalleryCardToCard","imgs","map","grafGalleryToCard","isGrafGallery","paragraphCount","concat","sqsGalleriesToCard","previousSibling","getElementsByTagName","prevNode","setAttribute","figureToImageCard","kgClass","grafClass","imgToCard","hrToCard","figureToCodeCard","pre","code","figcaption","preClass","codeClass","langRegex","languageMatches","language","toLowerCase","preCodeToCard","codeElement","children","figureScriptToHtmlCard","script","blockquoteWithChildren","child","altBlockquoteToAside","replacementDoc","aside","appendChild","tableToHtmlCard","parentNode","beforeAfterCard","embedCard","htmlCard","buttonCard","productCard","audioCard","videoCard","fileCard","headerCard"],"mappings":"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"}